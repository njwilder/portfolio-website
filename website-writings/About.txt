
About:
My name is Noah Wilder: I love software development (among other things).

One of my greatest joys in life is learning how things work and solving problems.
The more intimidating or difficult a problem is, the harder I will strive towards 
understanding and solving that problem. This ambition naturally attracted me to 
the field of Computer Science and coding. I enjoy continuously learning and solving 
the problems that come about from coding, as well as making those solutions as 
supportable and clean as possible, while also squeezing the best performance from 
a given system possible. 


MORE DETAILED ABOUT:
"For fortune and glory, kid. For fortune and glory..."

I am continually fascinated by the use of abstraction in computing to achieve some of 
the most impressive feats in human history.

I have been a video game junky since I could walk and talk. For better and for worse I 
have practically been raised off of games from the 1980's to present day. There 
is something I enjoy about having a fixed set of rules to work by in order to achieve 
various tasks. It makes you think in a different way to how you would think in real life.
You start to understand and internalize the quirks of every game's game engine to 
best realize your goals within said game. 

I have always been curious about how these miraculous devices could function. There was 
something so captivating about taking a plastic game console cartridge, slotting 
it into the system, and having something like Yoshi's Island appear on your television 
screen ready to play! This didn't work if you tried stuffing something like a 
peanut-butter and jelly sandwich into the cartridge slot, so what gives? What gave 
these cartridges their power to control the beast that lay inside of the console's 
outer shell?

Fortunately/unfortunately the internet was still not very prominent in my household. 
<maybe add a subtext thing about this here?>
****I vividly remember a time where my dad and I were trying to install Diablo II on 
PC from disk, and it required a constant internet connection to grab the necessary 
1's and 0's for the game to function. If the process was interrupted in any way, then 
the whole thing needed to be restarted. It took 2 weeks of continuous connection for 
the game to be installed (and we had it fail many times)... However the end product 
was so unbelievably worth it that it felt like a small price to pay at the time.
****
I didn't really understand at the time how to utilize the internet to get useful 
information out of it, and it was flakey and strange anyways. Why not just find 
things out for yourself or not question it and keep going with your life? 

Now I wouldn't say that I wasted my early years with gaming and generally being a 
recluse (though I would like to think a partially well-mannered one who didn't cause 
tooooo much trouble usually). I was always a very direction-less indecisive type of 
person growing up. I never found something that really interested me in a way that 
would inspire me to do work. Sure I worked still and I knew that I enjoyed playing video 
games, but I was always surrounded by the idea that video gaming was a juvenile activity 
and you really should become something more practical. I was just going through the 
motions in life. Nothing really caught my eye or interested me. I felt like the only 
real resources I had to work with were my videogames, books, and movies. But this is 
a very 'consumer' type lifestyle and I wanted to create new wonderful things! I just 
didn't know how to in a meaningful way. I never truly understood what my options were 
or where I could go and what I could do in life.

I only realized going into college that I could actually aspire towards creating 
things like videogames. As I explored 'software development' as a possible field 
of study, I came to realize that this ability reached past videogames into being 
able to code ANYTHING* you could imagine! The possibilities where endless!
I always thought this power was reserved only for the savant engineers of the ancient world, 
being something unattainable to the common people. I just never made the connection that 
software was a viable career option and at the time I didn't really understand what 
software development even meant or how it all worked, so I went with my gut and decided 
to start studying for a degree in CS. I never chose CS for any reason other than 
to develop a better understanding of the systems I used daily. There was something 
about software development that tickled the same parts of my brain that videogames 
did. It felt like you were working within a game, you are internalizing the quirks 
software development computer architecture to design whatever you (or your employer) 
fancies. It was fantastic!

A couple of years into college, I decided I wanted to get serious about software development 
and improving myself as a person, so I ended up joining UNH's InterOperability Laboratory 
(IOL). I was intimidated by the fact that I didn't know anything about coding, and shown 
for certain that I was a hopelessly lost and terrible software designer (starting out). 
However, with fantastic bosses and coworkers, I evolved into a truly passionate and hardworking 
developer. I wasn't motivated by the money I was earning, but the truly fantastic environment and 
the tons and tons of knowledge and experience I was getting daily. I was in love with the 
work and the people I worked with. I voluntarily took insane 60-80 hour work weeks while in 
full-time college (regrettably opting to sacrifice my grades chasing this new working high 
in my life). I would accidentally pull all-nighters at my work troubleshooting strange 
Over Fabrics drive issues, or bizzare specification details within cryptic drive tests. 
I felt truly free at my work, something I never really felt in my personal life except with 
things like video games. My coworkers and bosses grew concerned, but I assured them I was 
having the time of my life. And I really was having the time of my life! I felt truly 
alive deep in my work's server room troubleshooting long after the last employee of the 
lab had left the building. Coding became like an artform to me, a strange form of expression 
which allowed you to perform literal magic against these strange pieces of silicon and various 
metals. It felt like every word or expression you created was like you pouring your very being 
into the machine.

I felt comfortable with the machines. They were always there and 
they each had their own colorful personalities. The constant humming and whirring of the systems 
was attractive to me. It felt like I was making some difference. I was a productive person and I 
would like to think I had worked myself to a position of being important to my department. But I 
also enjoyed teaching others this new artform I had discovered. Everyone else I had encountered 
never seemed lost like I was, but I could relate to them in being lost by the work and the 
specifications we worked extensively with. This was like the glue that kept us all together, the 
idea of this specification and a test plan created by the higher powers which we needed to obey.
It made no sense and too much sense at the same time. It was such an intimidating set of documents 
to work under, especially if it was your first time dealing with a specification (which to many 
including me, it was). 

I liked to spread the idea that it was okay to not understand everything or even anything as long 
as you were working towards understanding and bettering yourself. I can't stand the idea of not 
trying to improve yourself and your abilities daily. This is somewhat hipocritical given my 
meandering upbringing only being enlightened to this idea of self improvement relatively recently, 
however I believe it to be one of the keys to being truly satisfied in life, something which I am 
always seeking out.

In the end I believe my work lost my respect and lost any right for me to continue working there 
by how they treated me during a very difficult time in my life, however I will continue to sing the 
praises of the people who uplifted my spirit and the work which made me realize some of my potential 
in this life. 




HOBBY ABOUT:
I believe it is important to reach out and grab anything that is even remotely 
interesting to yourself with both hands. I subscribe to the "jack of all trades, 
master of one" philosiphy where you should strive to try and learn as much about 
everything as possible. It's probably a good idea to learn more thoroughly in 
a field of some sort (for me being computing and electrical engineering as more of 
a hobby), but we should not supress our urge to explore outside of our preconcieved 
boundries. 



~~~~What was your journey to becoming a professional in what you do?~~~~
I started my professional journey relatively recently (starting in college) after being lost and not knowing what I really wanted to do for most of my life, I realized that I had been working with computers my whole life and I should play towards my strengths. I was always curious about how things worked and I always wanted to discover

~~~~What are your inspirations? Where do you find inspiration?~~~~
I found a lot of inspiration for coding to come from my first technical job at the 
InterOperability Laboratory at the University of New Hampshire. Many of the people 
working there convinced me that coding and working hard in general could actually be fun.
A lot of inspiration was drawn from certain sensational characters at this job that I will never forget 
and I owe a great deal to. These people showed me that it was okay to not know everything, 
reach out for help, but also stay firm in your work and not to give up, even when 
things look hopeless. 

~~~~What motivates you to do what you do?~~~~

~~~~What is your favorite part about being a software developer?~~~~


~~~~Favorite books which relate to your profession:~~~~
The Soul of a New Machine: This book really speaks to me as someone who has really 
given their entire being to get a project to work given a soul crushing workload 
and a seemingly impossible task within a relatively short amount of time (many times). 
I find myself relating to many of the computer engineers of the 'Eagle' system in 
how they felt and worked on problems-------

The Silmarillion: This is not a book that relates to my profession directly, but I think 
unraveling the history and story of J.R.R. Tolkien's Middle-earth displays skills which 
translate to software development pretty well. This being one of my favorite books shows 
that I enjoy untangling seeming insurmountable------




Coding Interests:
I enjoy working on large coding projects generally. Most of the work I have accomplished 
has been done from the ground-up (assignments, work projects, personal projects), though 
I have experience in supporting older large-scale code bases.




Hobby Interests:
-Archery
-Oil Painting
-Miniature Painting
-Music (played and sung)
-Electrical - (HACK System, SplitFlaps, etc.)
-Languages (French and German)
-BoardGaming
-Tolkien
-Old Tech
-Roguelike Development
-Beekeeping
-





